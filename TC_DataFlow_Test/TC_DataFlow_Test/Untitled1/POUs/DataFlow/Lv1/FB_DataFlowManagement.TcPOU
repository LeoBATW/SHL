<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_DataFlowManagement" Id="{f7d5b7fb-9a05-4d0d-a367-7c2a7531c7d8}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_DataFlowManagement
VAR CONSTANT
END_VAR
//NovRam
VAR RETAIN
	NovRamData:ST_NovRam;
END_VAR
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	lrFileUseRate: ARRAY[0..6] OF LREAL;
	lrRamUseRate:ARRAY[0..6] OF LREAL;
	
	//Data To NovRam
	fbDataToNovRam : FB_DataToNovRam;
	//NovRam To FileRingBuffer
	fbNovRamToFileRingBuffer:ARRAY [0..6] OF ARRAY[0..GVL.NovRamBufferRatio-1] OF FB_NovRamToFileRingBuffer;
	//FileRingBuffer To DataBase
	fbFileRingBufferToDB:ARRAY [0..6] OF ARRAY [0..GVL.NovRamBufferRatio-1] OF ARRAY[0..GVL.FileRingBufferRatio-1] OF FB_FileRingBufferToDB;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//FB cyclic
M_CyclicUpdate();

//Calc Use Rate
M_CalcUseRate(lrFileUseRate:=lrFileUseRate,lrRamUseRate:=lrRamUseRate);


]]></ST>
    </Implementation>
    <Method Name="M_CalcUseRate" Id="{b1b25544-751d-4a1e-a1ef-1e90150db345}">
      <Declaration><![CDATA[METHOD M_CalcUseRate : BOOL
VAR_IN_OUT
	lrFileUseRate: ARRAY[0..6] OF LREAL;
	lrRamUseRate:ARRAY[0..6] OF LREAL;
END_VAR
VAR
	iStruType:UDINT;
	iRamIndex:UDINT;iFileIndex:UDINT;
	
	udiRamFullCount:UDINT;
	udiFileFullCount:UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR iStruType:=0 TO 6 DO
	
	udiRamFullCount:=0;
	udiFileFullCount:=0;
	
	FOR iRamIndex:=0 TO GVL.NovRamBufferRatio-1 DO
		
		IF NovRamData.arrNovRam_Status[iStruType].RowDataLocked[iRamIndex] THEN//ram
			udiRamFullCount:=udiRamFullCount+1;
		END_IF
		
		FOR iFileIndex:=0 TO GVL.FileRingBufferRatio-1 DO//file
			IF NovRamData.arrFileRingBuffer_Status[iStruType].bFileFull[iRamIndex][iFileIndex] = TRUE THEN
				udiFileFullCount:=udiFileFullCount+1;
			END_IF
		END_FOR
	END_FOR
	
	lrFileUseRate[iStruType]:=UDINT_TO_LREAL(udiFileFullCount) 
								/ (UDINT_TO_LREAL(GVL.NovRamBufferRatio) * UDINT_TO_LREAL(GVL.FileRingBufferRatio));
	lrRamUseRate[iStruType]:=UDINT_TO_LREAL(udiRamFullCount) / UDINT_TO_LREAL(GVL.NovRamBufferRatio);
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_CyclicUpdate" Id="{e14d3aed-0555-49d4-9fa9-9256ac3db4b1}">
      <Declaration><![CDATA[METHOD M_CyclicUpdate : BOOL
VAR_INPUT
END_VAR
VAR
	i:UDINT;k:UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[//Data to NovRam
fbDataToNovRam(NovRamData:=NovRamData);


//NovRam to File
FOR i:= 0 TO GVL.NovRamBufferRatio-1 DO
	fbNovRamToFileRingBuffer[E_DB_StructureType.AlarmHistory][i](udiNovRamIndex:=i,dataType:=E_DB_StructureType.AlarmHistory,NovRamData:=NovRamData);
	fbNovRamToFileRingBuffer[E_DB_StructureType.ProductionHistory][i](udiNovRamIndex:=i,dataType:=E_DB_StructureType.ProductionHistory,NovRamData:=NovRamData);
	fbNovRamToFileRingBuffer[E_DB_StructureType.ProductionReport][i](udiNovRamIndex:=i,dataType:=E_DB_StructureType.ProductionReport,NovRamData:=NovRamData);
	fbNovRamToFileRingBuffer[E_DB_StructureType.ProductionSummary][i](udiNovRamIndex:=i,dataType:=E_DB_StructureType.ProductionSummary,NovRamData:=NovRamData);
	fbNovRamToFileRingBuffer[E_DB_StructureType.SoDuration][i](udiNovRamIndex:=i,dataType:=E_DB_StructureType.SoDuration,NovRamData:=NovRamData);
	fbNovRamToFileRingBuffer[E_DB_StructureType.StopCount][i](udiNovRamIndex:=i,dataType:=E_DB_StructureType.StopCount,NovRamData:=NovRamData);
	fbNovRamToFileRingBuffer[E_DB_StructureType.RegularCheckResults][i](udiNovRamIndex:=i,dataType:=E_DB_StructureType.RegularCheckResults,NovRamData:=NovRamData);
	
END_FOR
//File to DB
FOR i:=0 TO gvl.NovRamBufferRatio-1 DO
	FOR k:=0 TO GVL.FileRingBufferRatio-1 DO
		
		fbFileRingBufferToDB[E_DB_StructureType.AlarmHistory][i][k](udiNovRam_BufferIndex:=i,udiFile_Index:=k,dataType:=E_DB_StructureType.AlarmHistory,NovRamData:=NovRamData);
		fbFileRingBufferToDB[E_DB_StructureType.ProductionHistory][i][k](udiNovRam_BufferIndex:=i,udiFile_Index:=k,dataType:=E_DB_StructureType.ProductionHistory,NovRamData:=NovRamData);
		fbFileRingBufferToDB[E_DB_StructureType.ProductionReport][i][k](udiNovRam_BufferIndex:=i,udiFile_Index:=k,dataType:=E_DB_StructureType.ProductionReport,NovRamData:=NovRamData);
		fbFileRingBufferToDB[E_DB_StructureType.ProductionSummary][i][k](udiNovRam_BufferIndex:=i,udiFile_Index:=k,dataType:=E_DB_StructureType.ProductionSummary,NovRamData:=NovRamData);
		fbFileRingBufferToDB[E_DB_StructureType.SoDuration][i][k](udiNovRam_BufferIndex:=i,udiFile_Index:=k,dataType:=E_DB_StructureType.SoDuration,NovRamData:=NovRamData);
		fbFileRingBufferToDB[E_DB_StructureType.StopCount][i][k](udiNovRam_BufferIndex:=i,udiFile_Index:=k,dataType:=E_DB_StructureType.StopCount,NovRamData:=NovRamData);
		fbFileRingBufferToDB[E_DB_StructureType.RegularCheckResults][i][k](udiNovRam_BufferIndex:=i,udiFile_Index:=k,dataType:=E_DB_StructureType.RegularCheckResults,NovRamData:=NovRamData);
		
	END_FOR
END_FOR
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_DataFlowManagement">
      <LineId Id="99" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="141" Count="1" />
      <LineId Id="116" Count="0" />
      <LineId Id="93" Count="0" />
    </LineIds>
    <LineIds Name="FB_DataFlowManagement.M_CalcUseRate">
      <LineId Id="8" Count="20" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_DataFlowManagement.M_CyclicUpdate">
      <LineId Id="6" Count="28" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>